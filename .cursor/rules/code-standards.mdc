---
description:
globs:
alwaysApply: true
---
# Code Quality Standards

## Python Best Practices
- **PEP 8 Compliance**: Follow Python style guide strictly
  - Use snake_case for variables and functions
  - Use PascalCase for classes
  - Use UPPER_CASE for constants
  - Maximum line length: 88 characters (black formatter)
- **Type Hints**: Use type annotations for all function parameters and return values
- **Docstrings**: Comprehensive docstrings for all public functions and classes
  - Google style docstrings preferred
  - Include parameter types, return types, and examples
- **Error Handling**: Use specific exception types, not generic exceptions

## Code Structure
- **Imports**: Group imports (standard library, third-party, local) with blank lines
- **Functions**: Keep functions under 20 lines, methods under 15 lines
- **Classes**: Keep classes focused and under 200 lines
- **Modules**: Keep modules under 500 lines
- **Comments**: Explain why, not what (code should be self-documenting)

## Naming Conventions
- **Descriptive Names**: Variables and functions should clearly indicate purpose
- **Consistent Abbreviations**: Use consistent abbreviations across the codebase
- **Avoid Magic Numbers**: Use named constants for all numeric values
- **Boolean Names**: Use is_*, has_*, can_* prefixes for boolean variables

## Testing Requirements
- **Coverage Target**: Minimum 90% code coverage
- **Test Organization**: Mirror source code structure in tests
- **Mock Usage**: Mock external dependencies and network calls
- **Edge Cases**: Test boundary conditions and error scenarios
- **Performance Tests**: Test performance under various conditions
